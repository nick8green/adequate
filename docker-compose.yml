services:
  admin:
    command: yarn workspace admin dev
    container_name: adequate-admin
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/status']
      interval: 30s
      timeout: 10s
      retries: 3
    image: node:${NODE_VERSION:-24}
    networks:
      - admin
    ports:
      - '3001:3000'
    working_dir: /app
    volumes:
      - .:/app

  app:
    command: yarn workspace app dev
    container_name: adequate-app
    environment:
      - APP_NAME=adequate-dev
    env_file:
      - .env.local
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/status']
      interval: 30s
      timeout: 10s
      retries: 3
    image: node:${NODE_VERSION:-24}
    networks:
      - app
    ports:
      - '3000:3000'
    working_dir: /app
    volumes:
      - .:/app
      - ./development/app/images:/app/apps/app/public/assets/images

  grafana:
    container_name: adequate-grafana
    depends_on:
      - prometheus
    image: grafana/grafana-enterprise:${GRAFANA_VERSION}
    networks:
      - monitoring
    ports:
      - '8080:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./development/grafana/alerts/:/etc/grafana/alerts/
      - ./development/grafana/dashboards/:/etc/grafana/dashboards/
      - ./development/grafana/provisioning/:/etc/grafana/provisioning/
      - ./development/grafana/grafana.ini:/etc/grafana/grafana.ini

  prometheus:
    command: --config.file=/etc/prometheus/prometheus.yml
    container_name: adequate-prometheus
    depends_on:
      - app
    image: prom/prometheus:${PROMETHEUS_VERSION}
    networks:
      - app
      - admin
      - monitoring
    ports:
      - '9090:9090'
    volumes:
      - ./development/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  pushgateway:
    container_name: adequate-pushgateway
    image: prom/pushgateway:${PROMETHEUS_PUSHGATEWAY_VERSION}
    networks:
      - monitoring
    ports:
      - '9091:9091'

  docs:
    command: yarn workspace docs start --host 0.0.0.0 --no-open --poll 2000
    container_name: adequate-docs
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/status']
      interval: 30s
      timeout: 10s
      retries: 3
    image: node:${NODE_VERSION:-24}
    ports:
      - '3030:3000'
    working_dir: /app
    volumes:
      - .:/app

networks:
  admin:
    name: adequate-admin
  app:
    name: adequate-dev
  monitoring:
    name: adequate-monitoring

volumes:
  grafana-storage:
    name: adequate-grafana-storage
