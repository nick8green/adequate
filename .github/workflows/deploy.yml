name: create final pr to main
on:
  push:
    branches:
      - release

jobs:
  configure:
    name: ⏳ initialize workflow
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: generate matrix
        id: set-matrix
        run: |
          ref="${{ github.ref }}"
          branch="${ref##*/}"
          echo "Branch: $branch"

          before="${{ github.event.before }}"
          sha="${{ github.sha }}"

          if git cat-file -e "$before^{commit}" 2>/dev/null; then
            base_commit="$before"
          else
            base_commit=$(git rev-parse HEAD~1)
          fi

          changed_files=$(git diff --name-only "$base_commit" "$sha")
          apps=$(echo "$changed_files" | grep '^apps/' | cut -d/ -f2 | sort -u | uniq)

          valid_apps=()
          for app in $apps; do
            pkg_json="apps/$app/package.json"
            if [ -f "apps/$app/Dockerfile" ] && [ -f "$pkg_json" ]; then
              if [ "$branch" = "release" ]; then
                version=$(jq -r .version "$pkg_json")
              else
                version="$branch"
              fi
              # Sanitize version (for Docker tag compatibility)
              version=$(echo "$version" | tr '/' '-' | tr -c 'a-zA-Z0-9_.-' '-' | sed -E 's/-+/-/g; s/^-+//; s/-+$//')
              valid_apps+=("{\"app\": \"$app\", \"version\": \"$version\"}")
            fi
          done

          if [ ${#valid_apps[@]} -eq 0 ]; then
            matrix_json="{\"include\": []}"
          else
            matrix_json="{\"include\": [$(IFS=,; echo "${valid_apps[*]}")]}"
          fi

          echo "Generated matrix: $matrix_json"
          echo "matrix=$matrix_json" >> "$GITHUB_OUTPUT"

  deploy:
    name: 🚀 deploy ${{ matrix.app }} updates
    needs:
      - configure
    if: needs.configure.outputs.matrix != '{"include":[]}'
    strategy:
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
    uses: nick8green/workflows/.github/workflows/docker-deploy.yml@main
    with:
      image: ghcr.io/nick8green/adequate/${{ matrix.app }}
      name: adequate-${{ matrix.app }}
      version: ${{ matrix.version }}
    secrets:
      host: ${{ secrets.DEPLOY_HOST }}
      network: ${{ secrets.DOCKER_NETWORK }}
      user: ${{ secrets.DEPLOY_USER }}
      token: ${{ secrets.DEPLOY_KEY }}

  create-pr:
    name: 📨 create pr to main
    needs:
      - deploy
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: create pr
        uses: devops-infra/action-pull-request@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          label: automatic
          source_branch: release
          target_branch: main
          title: Latest Release
          body: '**Automated pull request**'
          draft: false
          get_diff: true
